
set mke2fs [check_installed mke2fs]
set dd     [check_installed dd]

#
# Build
#
set build_components {
	core init
	drivers/timer
	drivers/ahci
	drivers/platform
	test/blk/cli
}

lappend_if [have_spec acpi]  build_components drivers/acpi
lappend_if [have_spec pci]   build_components drivers/pci

build $build_components
#
# Build EXT2-file-system image
#
catch { exec $dd if=/dev/zero of=bin/ext2.raw bs=1M count=16 }
catch { exec $mke2fs -F bin/ext2.raw }

create_boot_directory

#
# Generate config
#
set config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
}
append_if [expr ![have_spec acpi] && ![have_spec pci]] config {
	<start name="platform_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Regulator"/></provides>
	</start>}

append_if [have_spec acpi] config {
	<start name="acpi">
		<resource name="RAM" quantum="8M" constrain_phys="yes"/>
		<binary name="acpi_drv"/>
		<provides>
			<service name="PCI"/>
			<service name="IRQ" />
		</provides>
		<route>
			<any-service> <parent/> <any-child /> </any-service>
		</route>
		<config>
			<policy label="acpi_drv"><pci class="ALL" /></policy>
			<policy label="ahci"><pci class="AHCI" /></policy>
		</config>
	</start>
}

append_if [expr ![have_spec acpi] && [have_spec pci]] config {
	<start name="pci_drv">
		<resource name="RAM" quantum="3M" constrain_phys="yes"/>
		<provides> <service name="PCI"/> </provides>
		<config>
			<policy label="ahci"><pci class="AHCI" /></policy>
		</config>
	</start> }

append config {
	<start name="ahci">
		<binary name="ahci_drv" />
		<resource name="RAM" quantum="10M" />
		<provides><service name="Block" /></provides>
		<config>
			<policy label="test-ahci" device="0" />
		</config>
	</start>
	<start name="test-ahci">
		<binary name="test-blk-cli" />
		<resource name="RAM" quantum="50M" />
		<config test_size="100M"></config>
		<route>
			<service name="Block"><child name="ahci"/></service>
			<any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>
</config> }

install_config $config

#
# Boot modules
#
set boot_modules { core init timer ahci_drv test-blk-cli }

lappend_if [expr ![have_spec acpi] && ![have_spec pci]] boot_modules platform_drv
lappend_if [have_spec pci]           boot_modules pci_drv
lappend_if [have_spec nova]          boot_modules pci_device_pd
lappend_if [have_spec acpi]          boot_modules acpi_drv

build_boot_image $boot_modules

append qemu_args " -nographic -m 256 "
append qemu_args " -drive id=disk,file=bin/ext2.raw,if=none -device ahci,id=ahci -device ide-hd,drive=disk,bus=ahci.0 -boot d"
append qemu_args " -drive id=cd,file=[run_dir]/../ahci_blk.iso,if=none,media=cdrom -device ide-cd,drive=cd,bus=ahci.1"

run_genode_until "Tests finished successfully!" 100
